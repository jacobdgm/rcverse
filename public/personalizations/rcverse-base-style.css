/* Reset / General */

body {
  margin: 0;
}

p {
  max-width: 60ch;
  margin: 0;
}

button {
  cursor: pointer;
}

dd {
  margin-inline-start: 0px;
}

summary {
  cursor: pointer;
}

main {
  padding-inline: 1rem;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: normal;
  margin: 0;
}

/* BEM - See https://getbem.com/introduction/ */

.participants {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.4em;
  width: 100%;
}

.participants__faces {
  display: inline-flex;
  flex-direction: row-reverse;
  flex-wrap: wrap;
  justify-content: flex-end;
  align-items: center;
}

.participants__face {
  position: relative;
  aspect-ratio: 1;
  border-radius: 99999px;
  border: 4px solid forestgreen;
}

.participants__face:not(:first-child) {
  margin-right: -0.8em;
}

.empty-room-memo {
  font-size: 0.8em;
  font-style: italic;
}

.room-list {
  /* "An Auto-Filling CSS Grid With Max Columns of a Minimum Size" */
  /* From https://css-tricks.com/an-auto-filling-css-grid-with-max-columns/ */
  --grid-layout-gap: 0.4em;
  --grid-column-count: 3;
  --grid-item--min-width: 350px;

  /**
     * Calculated values.
     */
  --gap-count: calc(var(--grid-column-count) - 1);
  --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
  --grid-item--max-width: calc(
    (100% - var(--total-gap-width)) / var(--grid-column-count)
  );

  display: grid;
  grid-template-columns: repeat(
    auto-fill,
    minmax(max(var(--grid-item--min-width), var(--grid-item--max-width)), 1fr)
  );
  grid-gap: var(--grid-layout-gap);
}

.room {
  margin-bottom: 0.4em;

  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

/* TODO: Probably better to find a layout which works for everything */
#in-the-hub-update .room {
  justify-content: flex-start;
}

.room:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.room__header {
  background: linear-gradient(to right, #eee, #eee 80%, #fff);
  padding: 0.4em;
  border-top-left-radius: 0.4em;
  border-top-right-radius: 0.4em;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 0.4em;
}

.room__header-title {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.6em;
}

.room__title {
  font-size: 1.4em;
}

.room__title-button {
  font-size: 0.8em;
}

.room__count {
  font-size: 0.8em;
  color: darkgray;
  white-space: nowrap;
}

.room__details {
  padding: 0.4em;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: baseline;
  gap: 0.4em;
}

.room__note-updates {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: baseline;
  gap: 0.4em;
}

.room__note-update-time {
  font-size: 0.6em;
  font-style: italic;
}

.room__note-edit-button {
  font-size: 0.8em;
}

.note-editor,
.note-editor__form-item {
  display: flex;
  flex-direction: column;
  gap: 0.2em;
}

.note-editor__text-input {
  width: 100%;
}

.personalization__code-preformatted {
  white-space: pre-wrap;
}

/* Utilities */

/* Remove from the box model, useful for HTMX utilities */
.display-contents {
  display: contents;
}
